/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     4.1                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  | For copyright notice see file Copyright         |
\*---------------------------------------------------------------------------*/

FoamFile
{
    version         2.0;
    format          ascii;
    class           dictionary;
    object          oversetMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

interpolation
{
    interpolationSchemes (inverseDistance);

    default inverseDistance;
}

// Names or patches that determine hole cells
holePatches  ( airfoil );

regions
(
    backgroundMesh
    {
        // Donor regions
        donorRegions ( middleMesh );

        fringe
        {
            type adaptiveOverlap;

            // Optional list of patches to start the fringe minimisation from
            initPatchNames       ();

            // Number of iterations for adaptive overlap search
            specifiedIterationsNumber 3; // 5 by default

            // Whether to try additional iterations
            additionalIterations yes; // yes by default

            // Orphan suitability
            orphanSuitability 1; // 1 by default

            donorSuitability
            {
                // Donor/acceptor pair must have cell volumes that differ not
                // more than 20% of the larger cell
                type        cellVolumes;
                threshold   0.2;
            }
        }
    }

    middleMesh
    {
        // Donor regions
        donorRegions ( frontMesh backgroundMesh );

        fringe
        {
            type adaptiveOverlap;

            // Optional list of patches to start the fringe minimisation from
            initPatchNames       (OversetMiddle);

            // Number of iterations for adaptive overlap search
            specifiedIterationsNumber 5; // 5 by default

            // Whether to try additional iterations
            additionalIterations yes; // yes by default

            // Orphan suitability
            orphanSuitability 1; // 1 by default

            donorSuitability
            {
                // Donor/acceptor pair must have cell volumes that are at least
                // 60% within each other
                type        cellVolumes;
                threshold   0.6;
            }
        }
    }

    frontMesh
    {
        // Donor regions
        donorRegions ( middleMesh );

        fringe
        {
            type adaptiveOverlap;

            // Optional list of patches to start the fringe minimisation from
            initPatchNames       (OversetFront);

            // Number of iterations for adaptive overlap search
            specifiedIterationsNumber 5; // 5 by default

            // Whether to try additional iterations
            additionalIterations yes; // yes by default

            // Orphan suitability
            orphanSuitability 1; // 1 by default

            donorSuitability
            {
                // Donor/acceptor pair must have cell volumes that are at least
                // 40% within each other
                type        cellVolumes;
                threshold   0.4;
            }
        }
    }
);


// ************************************************************************* //
